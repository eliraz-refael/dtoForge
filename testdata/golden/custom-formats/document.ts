// Generated by DtoForge - DO NOT EDIT
import * as t from 'io-ts';
import { Base64String } from './branded-types';
import { DateTimeString } from './branded-types';
import { URLString } from './branded-types';
import { UUID } from './branded-types';


/**
 * Document with metadata
 */
// Schema: Document
export const DocumentCodec = t.type({
  // Document content (base64 encoded)
  content: t.union([Base64String, t.undefined]),
  // Document identifier
  documentId: UUID,
  // Download URL
  downloadUrl: t.union([URLString, t.undefined]),
  // Upload timestamp
  uploadedAt: DateTimeString,
});

export type Document = t.TypeOf<typeof DocumentCodec>;

// Validation helper
export const isDocument = (value: unknown): value is Document =>
  DocumentCodec.is(value);

// Decode helper with error handling
export const decodeDocument = (value: unknown) =>
  DocumentCodec.decode(value);

// Partial codec for updates (all fields optional)
export const DocumentPartialCodec = t.partial({
  content: Base64String,
  documentId: UUID,
  downloadUrl: URLString,
  uploadedAt: DateTimeString,
});

export type DocumentPartial = t.TypeOf<typeof DocumentPartialCodec>;

